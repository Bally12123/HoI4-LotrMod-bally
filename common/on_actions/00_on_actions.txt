on_actions = {
	# country 
	on_new_term_election = {
		random_events = {
		}
	}

	# Ace pilots
	# country, FROM = ace
	on_ace_promoted = {
		random_events = {
			100 = ace_promoted.1
			5 = ace_promoted.2
		}
	}

	# country, FROM = ace, PREV = enemy ace 
	# This event fires twice, once for each ace.
	on_aces_killed_each_other = {
		random_events = {
			100 = aces_killed_each_other.1
		}
	}
	
	# country, FROM = our ace, 
	# PREV = enemy ace, has killed FROM
	on_ace_killed_by_ace = {
		random_events = {
			100 = ace_killed_by_ace.1
		}
	}

	# country, FROM = our ace, 
	# PREV = enemy ace, killed by FROM
	on_ace_killed_other_ace = {
		random_events = {
			100 = ace_killed_other_ace.1
		}
	}

	# country, FROM = ace
	on_ace_killed = {
		random_events = {
			100 = ace_died.1
		}
	}
	
	# our ace died in accident
	# country, FROM = ace
	# on_ace_killed_on_accident = {
	#
	# }
	
	# enemy ace is killed by our non name
	# country, FROM = enemy ace
	# on_non_ace_killed_other_ace = {
	#
	# }

	# During justifying wargoals
	# triggered daily, so make sure there is a sink somewhere not firing events
	# country, FROM = target nation
	on_justifying_wargoal_pulse = {
		random_events = {
			100 = war_justification.1
			100 = war_justification.2
			100 = war_justification.3
			100 = war_justification.4
			100 = war_justification.5
			100 = war_justification.6
			100 = war_justification.7
			100 = war_justification.8
			100 = war_justification.9
			100 = war_justification.10
			100 = war_justification.11
			100 = war_justification.12
			100 = war_justification.13
			100 = war_justification.14
			100 = war_justification.15
			100 = war_justification.16
			100 = war_justification.17
			100 = war_justification.18
			100 = war_justification.19
			17000 = 0
		}
	}

	on_wargoal_expire = {
		random_events = {
			100 = war_justification.301
		}
	}

	# country random events
	#on_bi_yearly_pulse = {
	#
	#}

	#on_five_year_pulse = {
	#
	#}

	on_border_war_lost = {
		effect = {
			owner = {
				country_event = { id = china.14 }
				country_event = { id = china.16 }
			}
		}
	}
	
	# When a new faction is formed
	on_faction_formed = {
		effect = {
			news_event = { id = news.159 }
		}
	}
	
	# ROOT is capitulated country, FROM is winner
	on_capitulation = {
		effect = {

			## LOTR mod specific stuff starts here
			if = {
				limit = { has_idea = one_true_ring }
				
				# transfer the ring from loser to winner
				remove_ideas = one_true_ring
				FROM = { country_event = mordor.43 }

				# Set flags correctly
				ROOT = {
					if = { limit = { original_tag = MON } clr_global_flag = sauron_has_ring }
					if = { limit = { original_tag = ISR } clr_global_flag = saruman_has_ring }
					if = { limit = { original_tag = LIT } clr_global_flag = lorien_has_ring }
					if = { limit = { original_tag = GEO } clr_global_flag = gondor_has_ring }
				}
				FROM = {
					if = { limit = { original_tag = MON } set_global_flag = sauron_has_ring }
					if = { limit = { original_tag = ISR } set_global_flag = saruman_has_ring }
					if = { limit = { original_tag = LIT } set_global_flag = lorien_has_ring }
					if = { limit = { original_tag = GEO } set_global_flag = gondor_has_ring }
				}
			}
			## LOTR mod specific stuff ends here
		}
	}

	on_coup_succeeded = {
		effect = {
			#Turn elections on for democracies created from coup
			random_other_country = {
				limit = {
					has_government = democratic
					original_tag = ROOT
				}
				set_politics = {
					elections_allowed = yes
				}
			}
		}
	}

	#ROOT is winner #FROM gets annexed - For civil wars on_civil_war_end is also fired
	on_annex = {
		effect = {
			## LOTR mod specific stuff starts here
			if = {
				limit = { FROM = { has_idea = one_true_ring } }
				
				# transfer the ring from loser to winner
				FROM = { remove_ideas = one_true_ring }
				ROOT = { country_event = mordor.43 }

				# Set flags correctly
				FROM = {
					if = { limit = { original_tag = MON } clr_global_flag = sauron_has_ring }
					if = { limit = { original_tag = ISR } clr_global_flag = saruman_has_ring }
					if = { limit = { original_tag = LIT } clr_global_flag = lorien_has_ring }
					if = { limit = { original_tag = GEO } clr_global_flag = gondor_has_ring }
				}
				ROOT = {
					if = { limit = { original_tag = MON } set_global_flag = sauron_has_ring }
					if = { limit = { original_tag = ISR } set_global_flag = saruman_has_ring }
					if = { limit = { original_tag = LIT } set_global_flag = lorien_has_ring }
					if = { limit = { original_tag = GEO } set_global_flag = gondor_has_ring }
				}
			}
			## LOTR mod specific stuff ends here
		}
	}

	#Not run on a specific country.
	on_startup = {
		effect = {
			
		}
	}

	#ROOT is new controller #FROM is old controller #FROM.FROM is state ID
	on_state_control_changed = {
		effect = {

		}
	}
}
