####################
#POLITICAL ADVISORS#
####################

advisor_decisions_category = {
	investment_gambling_venture = {
		icon = mission_icon     # For GFX_decision_mission_icon

        available = {
			always = no
        }

		activation = {
        	has_idea_with_trait = investment_gambler
    	}

	    #cancel_trigger = {
	    #    always = no
	    #}

	    is_good = yes
	    days_mission_timeout = 60
	    selectable_mission = no
	    days_remove = 1

	    timeout_effect = {

	    	custom_effect_tooltip = investment_gambling_venture_timeout

	    	hidden_effect = {
		    	# prevent stacking bonuses due to short months
				remove_dynamic_modifier = { modifier = investment_gambler_modifier }

				# refresh bonus for another 60 days if advisor is still employed
				if = {
					limit = { has_idea_with_trait = investment_gambler }
					set_variable_to_random = {
					    var = THIS.investment_gambler_factor
					    min = -0.20
					    max = 0.10
					    integer = no
					}

					add_dynamic_modifier = {
					    modifier = investment_gambler_modifier
					    days = 60
					}
				}
			}
	    }
	}

	longterm_planner_improvement = {
		icon = mission_icon     # For GFX_decision_mission_icon

        available = {
			always = no
        }

		activation = {
        	has_idea_with_trait = longterm_planner
        	check_variable = { var = THIS.longterm_planner_factor  value = -0.1  compare = greater_than }
    	}

	    cancel_trigger = {
	        NOT = { has_idea_with_trait = longterm_planner }
	    }

	    is_good = yes
	    days_mission_timeout = 365
	    selectable_mission = no
	    days_remove = 1

	    timeout_effect = {

	    	custom_effect_tooltip = longterm_planner_improvement_timeout

	    	hidden_effect = {
				add_to_variable = {
				    var = THIS.longterm_planner_factor
				    value = -0.02
				}

				if = {
					limit = { NOT = { has_dynamic_modifier = { modifier = longterm_planner_modifier } } }
					add_dynamic_modifier = { modifier = longterm_planner_modifier }
				}
			}
	    }
	}

	serial_indeptor_loans_start = {
		icon = mission_icon

		is_good = yes
	    days_mission_timeout = 0
	    selectable_mission = no
	    days_remove = 1

	    fire_only_once = yes # Can only loan money once!

        activation = {
			has_idea_with_trait = serial_indeptor
        }

        available = {
			has_idea_with_trait = serial_indeptor
        }

        complete_effect = {
        	# Advisor hired:
        	hidden_effect = {
	        	# This is the % of offmaps you get at the start as well as the % of consumers you need to pay back later
	        	set_variable = {
				    var = THIS.serial_indeptor_percentage
				    value = 0.2
				}

				# This is the amount of offmap factories the loan gives. (And how many are removed when it expires)
				set_variable = {
				    var = THIS.serial_indeptor_factories
				    value = 0.21 # rounding up a little bit :)
				}
	        	multiply_variable = {
				    var = THIS.serial_indeptor_factories
				    value = THIS.num_of_civilian_factories 
				}
				round_variable = THIS.serial_indeptor_factories
				clamp_variable = { var = THIS.serial_indeptor_factories min = 1 max = 10 }

				# Add offsite factories equal to the amount
	        	add_offsite_building = { type = industrial_complex level = THIS.serial_indeptor_factories }

	        	# Begin countdown for repayment
	        	activate_mission = serial_indeptor_loans
        	}
        }
	}

	serial_indeptor_loans = {
		icon = mission_icon

		is_good = yes
	    days_mission_timeout = 712
	    selectable_mission = no
	    days_remove = 1

	    fire_only_once = yes # Can only loan money once!

	    available = {
	    	always = no
	    }

	    allowed = {
	    	always = no
	    }

	    timeout_effect = {
	    	# Time for repayment

	    	custom_effect_tooltip = serial_indeptor_timeout

	    	hidden_effect = {
	    		# Remove those factories granted earlier
	    		set_temp_variable = { temp_pay = THIS.serial_indeptor_factories }
	    		multiply_temp_variable = { temp_pay = -1 }
	    		add_offsite_building = { type = industrial_complex level = temp_pay }

	    		# add repayment consumer goods
	    		add_dynamic_modifier = {
	    			modifier = serial_indebtor_repayment
	    			days = 712
    			}
			}
	    }
	}

	serial_indeptor_extra_loan1 = {
		icon = mission_icon

	    fire_only_once = yes # Can only loan money once!

	    visible = {
	    	NOT = { has_dynamic_modifier = { modifier = serial_indebtor_repayment } }
	    	has_idea_with_trait = serial_indeptor
	    }
	    available = {
	    	NOT = { has_dynamic_modifier = { modifier = serial_indebtor_repayment } }
	    	has_idea_with_trait = serial_indeptor
	    }

	    complete_effect = {
	    	# add bonus factories
	    	set_temp_variable = { temp_bonus_factories = 0.06 } # rounding up a little :)
	    	multiply_variable = {
			    var = temp_bonus_factories
			    value = THIS.num_of_civilian_factories 
			}
			round_variable = temp_bonus_factories
			clamp_temp_variable = { var = temp_bonus_factories min = 1 max = 10 }

			add_offsite_building = { type = industrial_complex level = temp_bonus_factories }

			add_to_variable = { THIS.serial_indeptor_factories = temp_bonus_factories }

			# Increase repayment
	    	add_to_variable = { THIS.serial_indeptor_percentage = 0.05 }
			custom_effect_tooltip = serial_indeptor_extra_loan_effect
	    }
	}

	serial_indeptor_extra_loan2 = {
		icon = mission_icon

	    fire_only_once = yes # Can only loan money once!

	    visible = {
	    	NOT = { has_dynamic_modifier = { modifier = serial_indebtor_repayment } }
	    	has_idea_with_trait = serial_indeptor
	    }
	    available = {
	    	NOT = { has_dynamic_modifier = { modifier = serial_indebtor_repayment } }
	    	has_idea_with_trait = serial_indeptor
	    }

	    complete_effect = {
	    	# add bonus factories
	    	set_temp_variable = { temp_bonus_factories = 0.06 } # rounding up a little :)
	    	multiply_variable = {
			    var = temp_bonus_factories
			    value = THIS.num_of_civilian_factories 
			}
			round_variable = temp_bonus_factories
			clamp_temp_variable = { var = temp_bonus_factories min = 1 max = 10 }

			add_offsite_building = { type = industrial_complex level = temp_bonus_factories }

			add_to_variable = { THIS.serial_indeptor_factories = temp_bonus_factories }

			# Increase repayment
	    	add_to_variable = { THIS.serial_indeptor_percentage = 0.05 }
			custom_effect_tooltip = serial_indeptor_extra_loan_effect
	    }
	}

	backalley_dealer_sell_infantry_equipment = {
		icon = mission_icon

	    selectable_mission = yes
	    days_remove = 356

	    visible = {
	    	has_idea_with_trait = backalley_dealer
	    }
	    available = {
	    	has_idea_with_trait = backalley_dealer
	    	has_equipment = { infantry_equipment > 4999 }
	    }

	    complete_effect = {
	    	add_offsite_building = { type = industrial_complex level = 2 }
	    	add_equipment_to_stockpile = {
		        type = infantry_equipment
		        amount = -5000
		    }
	    }
	}

	backalley_dealer_sell_support_equipment = {
		icon = mission_icon

	    selectable_mission = yes
	    days_remove = 356

	    visible = {
	    	has_idea_with_trait = backalley_dealer
	    }
	    available = {
	    	has_idea_with_trait = backalley_dealer
	    	has_equipment = { support_equipment > 999 }
	    }

	    complete_effect = {
	    	add_offsite_building = { type = industrial_complex level = 1 }
	    	add_equipment_to_stockpile = {
		        type = support_equipment
		        amount = -1000
		    }
	    }
	}

	backalley_dealer_sell_archery_equipment = {
		icon = mission_icon

	    selectable_mission = yes
	    days_remove = 356

	    visible = {
	    	has_idea_with_trait = backalley_dealer
	    }
	    available = {
	    	has_idea_with_trait = backalley_dealer
	    	has_equipment = { artillery_equipment > 999 }
	    }

	    complete_effect = {
	    	add_offsite_building = { type = industrial_complex level = 1 }
	    	add_equipment_to_stockpile = {
		        type = artillery_equipment
		        amount = -1000
		    }
	    }
	}

	pedantic_organizer_improvement = {
		icon = mission_icon     # For GFX_decision_mission_icon

        available = {
			always = no
        }

		activation = {
        	has_idea_with_trait = pedantic_organizer
        	check_variable = { var = THIS.pedantic_organizer_factor  value = 0.1  compare = less_than }
    	}

	    cancel_trigger = {
	        NOT = { has_idea_with_trait = pedantic_organizer }
	    }

	    is_good = yes
	    days_mission_timeout = 365
	    selectable_mission = no
	    days_remove = 1

	    timeout_effect = {

	    	custom_effect_tooltip = pedantic_organizer_improvement_timeout

	    	hidden_effect = {
				add_to_variable = {
				    var = THIS.pedantic_organizer_factor
				    value = 0.02
				}

				if = {
					limit = { NOT = { has_dynamic_modifier = { modifier = pedantic_organizer_modifier } } }
					add_dynamic_modifier = { modifier = pedantic_organizer_modifier }
				}
			}
	    }
	}

	negotiate_trade_deal = {
		icon = mission_icon

        available = {
        	OR = {
        		has_idea = protectionist_trade
        		has_idea = cooperative_trade
        	}
			NOT = { has_war_with = FROM }
        }

        visible = {
			OR = {
        		has_idea = protectionist_trade
        		has_idea = cooperative_trade
        	}
        }

        cancel_trigger = {
        	NOT = {
        		OR = {
	        		has_idea = protectionist_trade
	        		has_idea = cooperative_trade
	        	}
        	}
        }

	    cost = 100
	    target_array = neighbors
	    targets_dynamic = yes
	    cancel_if_not_visible = yes
	    days_remove = -1

	    #targeted_modifier = {
		#    tag = FROM
		#    trade_cost_for_target_factor = -0.5
		#}

		complete_effect = {
			FROM = {
				add_relation_modifier = {
					target = ROOT
					modifier = negotiated_trade_modifier
				}
			}
		}
	}
}
