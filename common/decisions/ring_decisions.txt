################
##### RING #####
################


ring_decisions = {
	launch_interception_attempt = {
        icon = GFX_decision_infiltrate_state
		cost = 150

        available = {
        	controls_state = var:global.fs_currentstate
        	NOT = { has_global_flag = fs_ring_seized }
        	NOT = { has_global_flag = fs_ring_destroyed }
        	NOT = { has_country_flag = fs_has_used_action }

        	hidden_trigger = {
	        	OR = {
	        		has_country_flag = fs_early_interception_unlocked
	        		has_global_flag = fs_arrived_in_rivendell
	        	}
        	}

        	check_variable = { army_leaders^num > 0 }
        }

		visible = {
			has_global_flag = fs_started
			is_ai = no

			NOT = { tag = RIV }
        	NOT = { tag = LTH }
        	NOT = { tag = MOA }
        	NOT = { tag = MOC }
        	NOT = { tag = GON }
		}

		ai_will_do = {
			base = 100
			# TODO: make this semi-random, potentially based on belligerent support etc.
			# Rohan should avoid doing this
		}

		fire_only_once = yes

		complete_effect = {
			ring_open_interception_attempt_prompt = yes
		}
	}

	# AI doesn't need to pay pp for this decision cause they stupid
	launch_interception_attempt_ai_cheat = {
        icon = GFX_decision_generic_civil_support
		cost = 0

        available = {
        	controls_state = var:global.fs_currentstate
        	NOT = { has_global_flag = fs_ring_seized }
        	NOT = { has_country_flag = fs_has_used_action }
        	NOT = { has_global_flag = fs_ring_destroyed }

        	hidden_trigger = {
	        	OR = {
	        		has_country_flag = fs_early_interception_unlocked
	        		has_global_flag = fs_arrived_in_rivendell
	        	}
        	}

        	check_variable = { army_leaders^num > 0 }
        }

		visible = {
			has_global_flag = fs_started
			is_ai = yes

			NOT = { tag = RIV }
        	NOT = { tag = LTH }
        	NOT = { tag = MOA }
        	NOT = { tag = MOC }
        	NOT = { tag = GON }
		}

		ai_will_do = {
			base = 100
			# TODO: make this semi-random, potentially based on belligerent support etc.
			# Rohan should avoid doing this
		}

		fire_only_once = yes

		complete_effect = {
			ring_open_interception_attempt_prompt = yes
		}
	}

	help_the_fellowship = {
        icon = GFX_decision_generic_operation
		cost = 100

        available = {
        	controls_state = var:global.fs_currentstate
        	NOT = { has_global_flag = fs_ring_seized }
        	NOT = { has_global_flag = fs_ring_destroyed }
        	NOT = { has_country_flag = fs_has_used_action }
        }

		visible = {
			has_global_flag = fs_started
		}

		fire_only_once = yes

		complete_effect = {
			add_timed_idea = {
		    	idea = minor_expense
		    	days = 60
			}

			# random fellowship member gets +1 attack +1 defense
			ring_gear_up_random_member = yes

			# heal up fellowship
			ring_heal_fellowship = yes

			set_country_flag = fs_has_used_action
		}
	}

	corrupt_ring_owner = {
		icon = generic_civil_support

		visible = {
			original_tag = MOR
			NOT = { has_completed_focus = resistsauron }
			has_global_flag = fs_ring_seized
			NOT = { ring_has_the_ring = yes }
			NOT = { has_global_flag = fs_ring_destroyed }
		}

		cancel_trigger = {
			hidden_trigger = {
				ring_has_the_ring = yes
			}
		}

		fire_only_once = no

		cost = 50

		days_remove = 120

		complete_effect = {
			var:global.fs_ring_owner = {
				add_timed_idea = {
		    		idea = MOR_sauron_influence
		    		days = 120
				}
			}
		}

		ai_will_do = {
			factor = 1
		}
	}

	strike_a_deal_with_sauron = {
		icon = GFX_decision_generic_operation
		cost = 150

		ai_will_do = {
			base = 0
		}

		visible = {
			has_global_flag = fs_ring_seized
			ring_has_the_ring = yes
			NOT = { original_tag = MOR }
		}

        available = {
        	
        }

		fire_only_once = yes

		complete_effect = {
			if = {
				limit = { has_war_with = MOR }
				white_peace = MOR
			}

			diplomatic_relation = {
			    country = MOR
			    relation = non_aggression_pact
			    active = yes
			}

			custom_effect_tooltip = strike_a_deal_with_sauron_tt

			hidden_effect = {
				MOR = { ring_seize_ring = yes }
			}
		}
	}
}
