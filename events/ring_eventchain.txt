###########################
# Ring Eventchain
###########################

add_namespace = fs



# Move into next state
country_event = {
	id = fs.1000

	is_triggered_only = yes
	hidden = yes

	immediate {
		# pop stack
		set_variable = { global.fs_currentstate = global.fs_path_stack^0 }
		add_to_variable = { global.fs_steps = 1 }
		remove_from_array = { array = global.fs_path_stack index = 0 }
		#log = "currentState: [?global.fs_currentstate]"

		# add to eventlog
		var:global.fs_currentstate = { ring_log_arrived_in_new_state = yes }


		# unique state-based encounters

		# Old forest encounter
		if = {
			limit = { check_variable = { global.fs_currentstate = 150 } }

			# Add Merry and Pippin
			FS_merry = { ring_add_member_to_fellowship_nolog = yes }
			FS_pippin = { ring_add_member_to_fellowship_nolog = yes }

			# eventlog
			add_to_array = { global.fs_eventlog_prefix_targets = 0 }
			add_to_array = { global.fs_eventlog_suffix_targets = 0 }
			add_to_array = { global.fs_eventlog = token:fs_event_merry_pippin_join }
			ring_trim_eventlog = yes

			# flavour
			if = {
				limit = { has_global_flag = fs_nazgul_sent_to_shire }
				add_to_array = { global.fs_eventlog_prefix_targets = 0 }
				add_to_array = { global.fs_eventlog_suffix_targets = 0 }
				add_to_array = { global.fs_eventlog = token:fs_event_old_forest_nazgul }
				ring_trim_eventlog = yes
			}
		}

		# Bree encounter
		else_if = {
			limit = { check_variable = { global.fs_currentstate = 149 } }

			# Add 'Strider'
			FS_aragorn = { ring_add_member_to_fellowship_nolog = yes }
			add_to_array = { global.fs_eventlog_prefix_targets = 0 }
			add_to_array = { global.fs_eventlog_suffix_targets = 0 }
			add_to_array = { global.fs_eventlog = token:fs_event_aragorn_in_bree }
			ring_trim_eventlog = yes

			# Gandalf not imprisoned -> he is in Bree
			if = {
				limit = { has_global_flag = gandalf_saruman_united }

				FS_gandalf = { ring_add_member_to_fellowship_nolog = yes }

				add_to_array = { global.fs_eventlog_prefix_targets = 0 }
				add_to_array = { global.fs_eventlog_suffix_targets = 0 }
				add_to_array = { global.fs_eventlog = token:fs_event_gandalf_in_bree }
				ring_trim_eventlog = yes
			}

			# Nazgul encounter
			if = {
				limit = { has_global_flag = fs_nazgul_sent_to_shire }

				add_to_array = { global.fs_eventlog_prefix_targets = 0 }
				add_to_array = { global.fs_eventlog_suffix_targets = 0 }
				add_to_array = { global.fs_eventlog = token:fs_event_bree_nazgul }
				ring_trim_eventlog = yes

				MOR = { country_event = { days = 5 id = mordor.54 } }
			}
		}

		# Weathertop encounter
		else_if = {
			limit = { check_variable = { global.fs_currentstate = 145 } }

			if = {
				limit = { has_global_flag = fs_nazgul_sent_to_shire }

				MOR = { country_event = { days = 7 id = mordor.55 } }
			}
			# No nazgul -> the whole group moves towards rivendell on foot
			else = {
				# Arwen joins because why not
				FS_arwen = { ring_add_member_to_fellowship = yes }
			}
		}

		# Bruinen Encounter
		else_if = {
			limit = { check_variable = { global.fs_currentstate = 200 } }

			# Nazgul (try to) catch up to Arwen on horseback
			if = {
				limit = { has_global_flag = fs_nazgul_sent_to_shire }

				random_list = {
					# Ring seized!
					2 = {
						MOR = { country_event = { days = 0 id = mordor.57 } }
					}
					# Nazgul couldnt catch up
					30 = {
						MOR = { country_event = { days = 0 id = mordor.58 } }
					}
					# Arwen summons flood-waters that sweep the Nazgul away
					68 = {
						# Eventlog
						add_to_array = { global.fs_eventlog_prefix_targets = 0 }
						add_to_array = { global.fs_eventlog_suffix_targets = 0 }
						add_to_array = { global.fs_eventlog = token:fs_event_bruinen_nazgul_wave }
						ring_trim_eventlog = yes

						# one of these nazgul die because of the water
						MOR = {
							random_list = {
								1 = { MOR_Akhorahil = { ring_combat_kill_character = yes } }
								1 = { MOR_Ji_Indur = { ring_combat_kill_character = yes } }
								1 = { MOR_Ren = { ring_combat_kill_character = yes } }
							}
							country_event = { days = 0 id = mordor.59 }
						}
					}
				}
			}
		}

		# Rivendell
		else_if = {
			limit = { check_variable = { global.fs_currentstate = 65 } }

			set_global_flag = fs_arrived_in_rivendell

			clr_global_flag = fs_on_horseback

			# TODO: auto-complete torturegollum focus if not completed

			# Eventlog
			add_to_array = { global.fs_eventlog_prefix_targets = 0 }
			add_to_array = { global.fs_eventlog_suffix_targets = 0 }
			add_to_array = { global.fs_eventlog = token:fs_event_ring_arrives_in_rivendell }
			ring_trim_eventlog = yes

			# Gandalf arrives in Rivendell after escaping Saruman
			if = {
				limit = { has_global_flag = gandalf_imprisoned }
				add_to_array = { global.fs_eventlog_prefix_targets = 0 }
				add_to_array = { global.fs_eventlog_suffix_targets = 0 }
				add_to_array = { global.fs_eventlog = token:fs_event_gandalf_arrives_in_rivendell }
				ring_trim_eventlog = yes
			}

			# Chance of Bilbo giving frodo a sword and mithril armor
			random_list = {
				5 = {
					add_to_array = { global.fs_eventlog_prefix_targets = 0 }
					add_to_array = { global.fs_eventlog_suffix_targets = 0 }
					add_to_array = { global.fs_eventlog = token:fs_event_bilbo_gifts }
					ring_trim_eventlog = yes

					FS_frodo = {
						add_attack = 2
						add_defense = 2
					}
				}
				1 = {
					# no gifts lol
				}
			}

			ring_clear_fellowship_members = yes

			# Create base fellowship (This should heal the members up aswell)
			FS_frodo = { ring_add_member_to_fellowship_nolog = yes }
			FS_sam = { ring_add_member_to_fellowship_nolog = yes }
			FS_gandalf = { ring_add_member_to_fellowship = yes }

			# Hold Council of Elrond:
			add_to_array = { global.fs_eventlog_prefix_targets = 0 }
			add_to_array = { global.fs_eventlog_suffix_targets = 0 }
			add_to_array = { global.fs_eventlog = token:fs_event_rivendell_council_invoked }
			ring_trim_eventlog = yes
			RIV = { country_event = { days = 14 id = rivendell.1 } }
		}

		# Redhorn Pass encounter
		else_if = {
			limit = { check_variable = { global.fs_currentstate = 66 } }

			# If Saru is bad, let him block this pass
			if = {
				limit = { has_global_flag = gandalf_imprisoned }
				ISE = { country_event = { days = 2 id = isengard.11 } }
			}
		}

		# Potential TODOs:
		# - Custom interception attempt by orcs of moria with (cave-troll)
		#	Leads to dwarves being able to help/respond if still alive
		# - Custom shelter offer if dwarves still alive with custom flavour if gimli with fellowship

		# orc-moria encounter
		else_if = {
			limit = {
				check_variable = { global.fs_currentstate = 73 }
				73 = { is_controlled_by = MOC }
			}

			# let MOC start interception with a cave troll
			MOC = { country_event = { days = 3 id = moria.6 } }
		}

		# East-Moria encounter
		else_if = {
			limit = { check_variable = { global.fs_currentstate = 134 } }

			# Remove oin and ori (These may have joined in the previous state)
			MOA = {
				MOA_ori = { ring_remove_member_from_fellowship = yes }
				MOA_oin = { ring_remove_member_from_fellowship = yes }
			}

			if = {
				limit = { 134 = { is_controlled_by = MOA } }
				# Allow dwarves to help out fellowship
				MOA = { country_event = { days = 4 id = moria.8 } }
			}

			# if balrog is alive
			if = {
				limit = {
					NOT = { MOA = { has_completed_focus = dealwiththebalrog } }
					NOT = { MOC = { has_completed_focus = dealwiththebalrog } }
				}

				# gandalf alive => goodbye Gandalf
				if = {
					limit = {
						FS_gandalf = { ring_is_fs_member = yes }
					}
					FS_gandalf = { ring_remove_member_from_fellowship_nolog = yes }

					add_to_array = { global.fs_eventlog_prefix_targets = 0 }
					add_to_array = { global.fs_eventlog_suffix_targets = 0 }
					add_to_array = { global.fs_eventlog = token:fs_event_balrog_encounter }
					ring_trim_eventlog = yes
				}
				# otherwise goodbye aragorn
				else_if = {
					limit = {
						FS_aragorn = { ring_is_fs_member = yes }
					}

					add_to_array = { global.fs_eventlog_prefix_targets = 0 }
					add_to_array = { global.fs_eventlog_suffix_targets = 0 }
					add_to_array = { global.fs_eventlog = token:fs_event_balrog_encounter_aragorn }
					ring_trim_eventlog = yes

					FS_aragorn = { ring_combat_kill_character = yes }
				}
				# otherwise, goodbye sam
				else_if = {
					limit = {
						FS_sam = { ring_is_fs_member = yes }
					}

					add_to_array = { global.fs_eventlog_prefix_targets = 0 }
					add_to_array = { global.fs_eventlog_suffix_targets = 0 }
					add_to_array = { global.fs_eventlog = token:fs_event_balrog_encounter_samwise }
					ring_trim_eventlog = yes

					FS_sam = { ring_combat_kill_character = yes }
				}
			}
		}

		# Lorien encounter
		else_if = {
			limit = { check_variable = { global.fs_currentstate = 75 } }

			# give LTH option to offer fellowship shelter
			if = {
				limit = {
					75 = { is_controlled_by = LTH }
					NOT = { LTH = { is_in_faction_with = MOR } }
				}
				LTH = { country_event = { days = 1 id = lothlorien.3 } }
			}

			set_global_flag = fs_on_boat
		}

		# Argonath Encounter / Breakup
		else_if = {
			limit = { check_variable = { global.fs_currentstate = 182 } }

			if = {
				limit = { ring_boromir_in_fellowship = yes }

				# Boromir incident:
				GON = { country_event = gondor.4 }
			}
			else = {
				# Trigger Argonath raid
				ring_execute_argonath_raid = yes
			}
		}

		# Gollum joins
		else_if = {
			limit = { check_variable = { global.fs_currentstate = 98 } }

			FS_gollum = { ring_add_member_to_fellowship = yes }
			set_global_flag = fs_only_hobbits
		}

		# At Black Gate
		else_if = {
			limit = { check_variable = { global.fs_currentstate = 204 } }

			SHI = { country_event = { days = 1 id = fs.1004 } }
		}

		# Ithilien: Faramir encounter
		else_if = {
			limit = { check_variable = { global.fs_currentstate = 173 } }

			if = {
				limit = {
					NOT = { has_global_flag = fs_gondor_faramir }
					NOT = { has_global_flag = faramir_dead }
				}
				random_list = {
					50 = {
						add_to_array = { global.fs_eventlog_prefix_targets = 0 }
						add_to_array = { global.fs_eventlog_suffix_targets = 0 }
						add_to_array = { global.fs_eventlog = token:fs_event_captured_by_faramir }
						ring_trim_eventlog = yes
						GON = { country_event = { days = 3 id = gondor.13 } }
					}
					50 = { }
				}
			}
		}

		# Minas Morgul: Gollum leaves and Shelob encounter
		# Last chance for Mordor
		else_if = {
			limit = { check_variable = { global.fs_currentstate = 5 } }

			FS_gollum = { ring_remove_member_from_fellowship = yes }

			# Shelob ancounter (just flavour for now)
			if = {
				limit = { has_global_flag = MOR_allow_shelob }
				add_to_array = { global.fs_eventlog_prefix_targets = 0 }
				add_to_array = { global.fs_eventlog_suffix_targets = 0 }
				add_to_array = { global.fs_eventlog = token:fs_event_shelob_encounter }
				ring_trim_eventlog = yes
			}
		}

		# Shortly before Mt Doom: Last chance for Mordor (if through Black Gate)
		else_if = {
			limit = { check_variable = { global.fs_currentstate = 188 } }

			# TODO
		}

		# Mount Doom: RING DESTROYED
		else_if = {
			limit = { check_variable = { global.fs_currentstate = 10 } }

			# TODO
		}
		
		# Move into next state if fellowship still exists
		if = {
			limit = { check_variable = { global.fs_path_stack^num > 0 } }
			ring_fellowship_begin_move_to_next_state = yes
		}
	}
}



# Commence event-chain
country_event = {
	id = fs.1001

	is_triggered_only = yes
	hidden = yes

	immediate {
		SHI = {

			# set variables
			set_variable = { global.fs_currentstate = 42 }
			set_variable = { global.fs_steps = 1 }
			log = "currentState: [?global.fs_currentstate]"

			set_global_flag = fs_started

			# Set path to prelude
			set_variable = { global.fs_path = 0 }

			# Initial fellowship
			FS_frodo = { ring_add_member_to_fellowship_nolog = yes }
			FS_sam = { ring_add_member_to_fellowship_nolog = yes }

			if = {
				limit = { has_global_flag = fs_nazgul_sent_to_shire }
				add_to_array = { global.fs_eventlog_prefix_targets = 0 }
				add_to_array = { global.fs_eventlog_suffix_targets = 0 }
				add_to_array = { global.fs_eventlog = token:fs_event_start }
				ring_trim_eventlog = yes
			}
			else = {
				add_to_array = { global.fs_eventlog_prefix_targets = 0 }
				add_to_array = { global.fs_eventlog_suffix_targets = 0 }
				add_to_array = { global.fs_eventlog = token:fs_event_start_nazgul }
				ring_trim_eventlog = yes
			}

			# Gandalf goes to meet Saruman
			ISE = { country_event = { days = 16 id = isengard.1 } }
			add_to_array = { global.fs_eventlog_prefix_targets = 0 }
			add_to_array = { global.fs_eventlog_suffix_targets = 0 }
			add_to_array = { global.fs_eventlog = token:fs_event_gandalf_goes_to_saruman }
			ring_trim_eventlog = yes

			# starting pathstack (Shire to Rivendell)
			add_to_array = { global.fs_path_stack = 150 }
			add_to_array = { global.fs_path_stack = 149 }
			add_to_array = { global.fs_path_stack = 145 }
			add_to_array = { global.fs_path_stack = 64 }
			add_to_array = { global.fs_path_stack = 200 }
			add_to_array = { global.fs_path_stack = 202 }
			add_to_array = { global.fs_path_stack = 65 }

			ring_fellowship_begin_move_to_next_state = yes

		}
	}
}


# Council of Elrond Concluded
country_event = {
	id = fs.1002

	is_triggered_only = yes
	hidden = yes

	immediate {
		# clear the temporary flags
		clr_global_flag = fs_mirkwood_responded
		clr_global_flag = fs_erebor_responded
		clr_global_flag = fs_gondor_responded

		# eventlog
		add_to_array = { global.fs_eventlog_prefix_targets = 0 }
		add_to_array = { global.fs_eventlog_suffix_targets = 0 }
		add_to_array = { global.fs_eventlog = token:fs_event_rivendell_council_concluded }
		ring_trim_eventlog = yes

		# newspaper event
		ring_execute_fellowship_newspaper_event = yes

		# Add Merry and Pippin
		FS_merry = { ring_add_member_to_fellowship_nolog = yes }
		FS_pippin = { ring_add_member_to_fellowship_nolog = yes }

		# Decision of which path to take
		random_list = {
			# Cross mountains
			3 = {
				# set pathid
				set_variable = { global.fs_path = 1 }

				# eventlog
				add_to_array = { global.fs_eventlog_prefix_targets = 0 }
				add_to_array = { global.fs_eventlog_suffix_targets = 0 }
				add_to_array = { global.fs_eventlog = token:fs_event_path_choice_mountains }
				ring_trim_eventlog = yes

				# populate pathstack
				add_to_array = { global.fs_path_stack = 202 }
				add_to_array = { global.fs_path_stack = 66 }
				add_to_array = { global.fs_path_stack = 195 }
				add_to_array = { global.fs_path_stack = 160 }
				add_to_array = { global.fs_path_stack = 75 }
				add_to_array = { global.fs_path_stack = 191 }
				add_to_array = { global.fs_path_stack = 179 }
				add_to_array = { global.fs_path_stack = 30 }
				add_to_array = { global.fs_path_stack = 206 }
				add_to_array = { global.fs_path_stack = 27 }
				add_to_array = { global.fs_path_stack = 98 }
				add_to_array = { global.fs_path_stack = 182 }
				add_to_array = { global.fs_path_stack = 98 }
				add_to_array = { global.fs_path_stack = 101 }
				add_to_array = { global.fs_path_stack = 204 }

			}
			# Angmar
			1 = {
				modifier = {
            		factor = 2
            		ANG = { has_completed_focus = staytruetogondor }
        		}
        		modifier = {
            		factor = 2
            		ANG = { is_ai = no }
        		}
        		modifier = {
            		factor = 0
            		is_historical_focus_on = yes
        		}
        		# set pathid
        		set_variable = { global.fs_path = 3 }

        		# eventlog
				add_to_array = { global.fs_eventlog_prefix_targets = 0 }
				add_to_array = { global.fs_eventlog_suffix_targets = 0 }
				add_to_array = { global.fs_eventlog = token:fs_event_path_choice_angmar }
				ring_trim_eventlog = yes

				# populate pathstack
				add_to_array = { global.fs_path_stack = 151 }
				add_to_array = { global.fs_path_stack = 62 }
				add_to_array = { global.fs_path_stack = 153 }
				add_to_array = { global.fs_path_stack = 69 }
				add_to_array = { global.fs_path_stack = 196 }
				add_to_array = { global.fs_path_stack = 197 }
				add_to_array = { global.fs_path_stack = 71 }
				add_to_array = { global.fs_path_stack = 70 }
				add_to_array = { global.fs_path_stack = 199 }
				add_to_array = { global.fs_path_stack = 72 }
				add_to_array = { global.fs_path_stack = 75 }
				add_to_array = { global.fs_path_stack = 191 }
				add_to_array = { global.fs_path_stack = 179 }
				add_to_array = { global.fs_path_stack = 30 }
				add_to_array = { global.fs_path_stack = 206 }
				add_to_array = { global.fs_path_stack = 27 }
				add_to_array = { global.fs_path_stack = 98 }
				add_to_array = { global.fs_path_stack = 182 }
				add_to_array = { global.fs_path_stack = 98 }
				add_to_array = { global.fs_path_stack = 101 }
				add_to_array = { global.fs_path_stack = 204 }
			}
			# Isengard
			1 = {
				modifier = {
            		factor = 2
            		has_global_flag = gandalf_saruman_united
        		}
        		modifier = {
            		factor = 0
            		is_historical_focus_on = yes
        		}
        		# set pathid
        		set_variable = { global.fs_path = 4 }

        		# eventlog
				add_to_array = { global.fs_eventlog_prefix_targets = 0 }
				add_to_array = { global.fs_eventlog_suffix_targets = 0 }
				add_to_array = { global.fs_eventlog = token:fs_event_path_choice_isengard }
				ring_trim_eventlog = yes

				# populate pathstack
				add_to_array = { global.fs_path_stack = 202 }
				add_to_array = { global.fs_path_stack = 200 }
				add_to_array = { global.fs_path_stack = 201 }
				add_to_array = { global.fs_path_stack = 37 }
				add_to_array = { global.fs_path_stack = 79 }
				add_to_array = { global.fs_path_stack = 78 }
				add_to_array = { global.fs_path_stack = 77 }
				add_to_array = { global.fs_path_stack = 159 }
				add_to_array = { global.fs_path_stack = 158 }
				add_to_array = { global.fs_path_stack = 24 }
				add_to_array = { global.fs_path_stack = 28 }
				add_to_array = { global.fs_path_stack = 26 }
				add_to_array = { global.fs_path_stack = 27 }
				add_to_array = { global.fs_path_stack = 182 }
				add_to_array = { global.fs_path_stack = 98 }
				add_to_array = { global.fs_path_stack = 101 }
				add_to_array = { global.fs_path_stack = 204 }
			}
		}

		# get going
		ring_fellowship_begin_move_to_next_state = yes
		
	}
}

# Force fellowship through moria
country_event = {
	id = fs.1003

	is_triggered_only = yes
	hidden = yes

	immediate {
		# eventlog
		add_to_array = { global.fs_eventlog_prefix_targets = 0 }
		add_to_array = { global.fs_eventlog_suffix_targets = 0 }
		add_to_array = { global.fs_eventlog = token:fs_event_misty_mountain_path_blocked }
		ring_trim_eventlog = yes

		# Set path
		set_variable = { global.fs_path = 2 }

		# re-populate pathstack
		add_to_array = { global.fs_path_stack = 73 }
		add_to_array = { global.fs_path_stack = 134 }
		add_to_array = { global.fs_path_stack = 160 }
		add_to_array = { global.fs_path_stack = 75 }
		add_to_array = { global.fs_path_stack = 191 }
		add_to_array = { global.fs_path_stack = 179 }
		add_to_array = { global.fs_path_stack = 30 }
		add_to_array = { global.fs_path_stack = 206 }
		add_to_array = { global.fs_path_stack = 27 }
		add_to_array = { global.fs_path_stack = 98 }
		add_to_array = { global.fs_path_stack = 182 }
		add_to_array = { global.fs_path_stack = 98 }
		add_to_array = { global.fs_path_stack = 101 }
		add_to_array = { global.fs_path_stack = 204 }

		# get going
		ring_fellowship_begin_move_to_next_state = yes
		
	}
}

# Hobbits at black gate deciding where to go
country_event = {
	id = fs.1004

	is_triggered_only = yes
	hidden = yes

	immediate {
		random_list = {
			# Decide to go around through Minas Morgul
			5 = {
				modifier = {
					add = 5
					204 = { is_controlled_by = MOR }
				}
				modifier = {
					add = 5
					2 = { is_controlled_by = MOR }
				}
				modifier = {
					add = 5
					188 = { is_controlled_by = MOR }
				}

				# eventlog
				add_to_array = { global.fs_eventlog_prefix_targets = 0 }
				add_to_array = { global.fs_eventlog_suffix_targets = 0 }
				add_to_array = { global.fs_eventlog = token:fs_event_black_gate_decision_mm }
				ring_trim_eventlog = yes

				# adjust path
				add_to_variable = { global.fs_path = 20 }

				# pathstack
				add_to_array = { global.fs_path_stack = 22 }
				add_to_array = { global.fs_path_stack = 173 }
				add_to_array = { global.fs_path_stack = 5 }
				add_to_array = { global.fs_path_stack = 10 }
			}

			# Decide to yolo slip past the gate
			2 = {
				# eventlog
				add_to_array = { global.fs_eventlog_prefix_targets = 0 }
				add_to_array = { global.fs_eventlog_suffix_targets = 0 }
				add_to_array = { global.fs_eventlog = token:fs_event_black_gate_decision_bg }
				ring_trim_eventlog = yes

				# adjust path
				add_to_variable = { global.fs_path = 10 }

				# pathstack
				add_to_array = { global.fs_path_stack = 2 }
				add_to_array = { global.fs_path_stack = 188 }
				add_to_array = { global.fs_path_stack = 10 }
			}
		}

		# get going
		ring_fellowship_begin_move_to_next_state = yes
		
	}
}

# RIng Seized
country_event = {
	id = fs.101
	title = fs.101.t
	desc = fs.101.d
	picture = GFX_report_event_ring

	is_triggered_only = yes

	option = {
		name = fs.101.a
		ai_chance = {
			base = 50
		}
		effect_tooltip = {
			add_ideas = one_true_ring
		}
	}
}