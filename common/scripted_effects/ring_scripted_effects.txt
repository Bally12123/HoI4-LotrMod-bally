




# Adds the current scope as a member of the fellowship
ring_add_member_to_fellowship = {

	add_to_array = { global.fs_eventlog_targets = THIS }
	add_to_array = { global.fs_eventlog = token:fs_event_member_joins }


	add_to_array = { global.fs_members = THIS }
}


# Adds the current scope as a member of the fellowship, but does NOT log this to the eventlog
ring_add_member_to_fellowship_nolog = {

	add_to_array = { global.fs_members = THIS }
}


# Removes the current scope from the fellowship
ring_remove_member_from_fellowship = {

	add_to_array = { global.fs_eventlog_targets = THIS }
	add_to_array = { global.fs_eventlog = token:fs_event_member_leaves }
	
	remove_from_array = { global.fs_members = THIS }
}


# Removes the current scope from the fellowship, but does NOT log this to the eventlog
ring_remove_member_from_fellowship_nolog = {

	remove_from_array = { global.fs_members = THIS }
}


# Clears all members from the fellowship, does NOT add an entry to the eventlog
ring_clear_fellowship_members = {

	log = "FELLOWSHIP CLEARED"

	clear_array = global.fs_members
}


# Adds an entry to the eventlog stating that the fellowship has arrived in the current scope
ring_log_arrived_in_new_state = {

	add_to_array = { global.fs_eventlog_targets = THIS }
	add_to_array = { global.fs_eventlog = token:fs_event_arrive_in_new_state }
}


# Queues up an event to move into the next state (fs.1000)
ring_fellowship_begin_move_to_next_state = {

	# TODO: Set this variable based on the speed of the fellowship
	set_variable = { global.fs_days_left_in_state = 3 }
}


# Runs every day. Pls keep as simple as possible for best performance
# Note to self: Maybe make this a weekly update instead?
ring_daily_update = {
	if = {

		# Update fs_days_left_in_state
		limit = { check_variable = { global.fs_days_left_in_state > 0 } }
		subtract_from_variable = { global.fs_days_left_in_state = 1 }

		# When the timer runs out, move fellowship to the enxt state
		if = {
			limit = { check_variable = { global.fs_days_left_in_state = 0 } }

			# This event moves the fellowship to the enxt state
			SHI = { country_event = fs.1000 }

			# Set the days remaining to negative, so that we don't accidentally call this again
			set_variable = { global.fs_days_left_in_state = -1 }
		}
	}
}